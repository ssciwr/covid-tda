name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release
  AVX2: OFF
  AVX512: OFF

jobs:
  build-and-test:
    name: Testing on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15, windows-2019]

    steps:
    # clone the repo & any submodules
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: make build directory
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: configure cmake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=ON -DHAMMING_BUILD_BENCHMARKS=ON -DHAMMING_WITH_SSE2=ON -DHAMMING_WITH_AVX2=$AVX2 -DHAMMING_WITH_AVX512=$AVX512 -DHAMMING_BUILD_PYTHON=ON

    - name: build
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build .

    - name: run tests
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: ctest

  build-wheels:
    needs: [build-and-test]
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15, windows-2019]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: make build directory
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: configure cmake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release -DHAMMING_WITH_SSE2=ON -DHAMMING_WITH_AVX2=ON -DHAMMING_WITH_AVX512=ON -DHAMMING_BUILD_PYTHON=ON

    - name: build
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build .

    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.7'

    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel==1.6.4

    - name: Install Visual C++ for Python 2.7
      if: runner.os == 'Windows'
      run: |
        choco install vcpython27 -f -y

    - name: Build wheels
      run: |
        python -m cibuildwheel --output-dir wheelhouse

    - uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build-wheels]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
