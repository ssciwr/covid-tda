name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  BUILD_TYPE: Release
  HAMMING_WITH_SSE2: OFF
  HAMMING_WITH_AVX2: OFF
  HAMMING_WITH_AVX512: OFF
  HAMMING_WITH_OPENMP: OFF

jobs:
  build-and-test:
    name: Testing on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            open-mp: "ON"
          - os: macos-latest
            open-mp: "OFF"
          - os: macos-arm64-ssc
            open-mp: "OFF"
          - os: windows-latest
            open-mp: "OFF"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          allow-prereleases: true

      - name: make build directory
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: configure cmake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=ON -DHAMMING_BUILD_BENCHMARKS=ON -DHAMMING_WITH_SSE2=$HAMMING_WITH_SSE2 -DHAMMING_WITH_AVX2=$HAMMING_WITH_AVX2 -DHAMMING_WITH_AVX512=$HAMMING_WITH_AVX512 -DHAMMING_BUILD_PYTHON=ON -DHAMMING_WITH_OPENMP=${{ matrix.open-mp }}

      - name: build
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake --build .

      - name: run tests
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: ctest
